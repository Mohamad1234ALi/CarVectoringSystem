name: CI/CD Streamlit to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3️⃣ Login to Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # 4️⃣ Build Docker image and push to ECR
      - name: Build, tag, and push Docker image
        run: |
          # Use first 8 chars of commit SHA, fallback to 'latest' if empty
          IMAGE_TAG=${GITHUB_SHA:0:8}
          if [ -z "$IMAGE_TAG" ]; then
            IMAGE_TAG=latest
          fi
          echo "Image tag: $IMAGE_TAG"
          
          # Build & push Docker image
          docker build -t ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
          docker push ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG

          # Also tag as latest
          docker tag ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG ${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.ECR_REPOSITORY }}:latest

      # 5️⃣ Register new ECS task definition and get ARN
      - name: Register new ECS task definition
        id: register-task
        run: |
          echo "Fetching current task definition..."
          TASK_DEF=$(aws ecs describe-task-definition --task-definition ${{ secrets.TASK_DEFINITION }})

          echo "Updating container image..."
          NEW_TASK_DEF=$(echo $TASK_DEF | jq --arg IMAGE "${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG" \
            '.taskDefinition | .containerDefinitions[0].image=$IMAGE | 
            { 
              family: .family, 
              containerDefinitions: .containerDefinitions, 
              taskRoleArn: (.taskRoleArn // ""), 
              executionRoleArn: (.executionRoleArn // ""), 
              networkMode: .networkMode, 
              requiresCompatibilities: .requiresCompatibilities, 
              cpu: .cpu, 
              memory: .memory 
            }')

          echo "$NEW_TASK_DEF" > new-task-def.json

          # Register task definition and capture ARN
          TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV
          echo "New task definition ARN: $TASK_DEF_ARN"

      # 6️⃣ Update ECS service to use the new task definition
      - name: Update ECS service
        run: |
          echo "Deploying new task revision..."
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_SERVICE }} \
            --task-definition $TASK_DEF_ARN \
            --force-new-deployment
