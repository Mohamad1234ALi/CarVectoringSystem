name: CI/CD Streamlit to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3️⃣ Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 4️⃣ Install dependencies
      - name: Install dependencies
        run: |
          pip install great_expectations boto3 pandas

      # 5️⃣ Validate car data
      - name: Validate car data
        run: python scripts/validate_car_data.py
    

      # 6️⃣ Login to Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # 7️⃣ Build Docker image and push to ECR
      - name: Build, tag, and push Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA::8}
          echo "Image tag: $IMAGE_TAG"
          docker build -t ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
          docker push ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG

          # Optional: also tag as latest
          docker tag ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG ${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.ECR_REPOSITORY }}:latest

      # 8️⃣ Update ECS task definition
      - name: Register new ECS task definition
        run: |
          echo "Fetching current task definition..."
          TASK_DEF=$(aws ecs describe-task-definition --task-definition ${{ secrets.TASK_DEFINITION }})
          
          echo "Updating container image..."
          NEW_TASK_DEF=$(echo $TASK_DEF | jq --arg IMAGE "${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG" \
            '.taskDefinition | .containerDefinitions[0].image=$IMAGE | 
            { 
              family: .family, 
              containerDefinitions: .containerDefinitions, 
              taskRoleArn: (.taskRoleArn // ""), 
              executionRoleArn: (.executionRoleArn // ""), 
              networkMode: .networkMode, 
              requiresCompatibilities: .requiresCompatibilities, 
              cpu: .cpu, 
              memory: .memory 
            }')
          
          echo "$NEW_TASK_DEF" > new-task-def.json
          aws ecs register-task-definition --cli-input-json file://new-task-def.json

      # 9️⃣ Update ECS service to use the new task definition
      - name: Update ECS service
        run: |
          echo "Deploying new task revision..."
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_SERVICE }} \
            --force-new-deployment
